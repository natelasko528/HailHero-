version: '3.8'

services:
  # HailHero MVP Application
  hailhero:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: hailhero-mvp
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=/app/src/mvp/app.py
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:////app/data/hailhero.db
      - LOG_LEVEL=INFO
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - NOAA_API_KEY=${NOAA_API_KEY}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./specs/001-hail-hero-hail/data:/app/specs/001-hail-hero-hail/data
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hailhero-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: hailhero-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - hailhero-network

  # PostgreSQL database for production data persistence
  postgres:
    image: postgres:15-alpine
    container_name: hailhero-postgres
    environment:
      - POSTGRES_DB=hailhero
      - POSTGRES_USER=hailhero
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hailhero -d hailhero"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hailhero-network

  # Celery worker for background tasks
  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: hailhero-celery
    command: celery -A src.celery_app worker --loglevel=info
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://hailhero:${POSTGRES_PASSWORD}@postgres:5432/hailhero
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - NOAA_API_KEY=${NOAA_API_KEY}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - hailhero-network

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: hailhero-celery-beat
    command: celery -A src.celery_app beat --loglevel=info
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://hailhero:${POSTGRES_PASSWORD}@postgres:5432/hailhero
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - hailhero-network

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: hailhero-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - hailhero
    restart: unless-stopped
    networks:
      - hailhero-network
    profiles:
      - production

  # Development service with hot reload
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: hailhero-dev
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_APP=/app/src/mvp/app.py
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:////app/data/hailhero_dev.db
      - LOG_LEVEL=DEBUG
    volumes:
      - .:/app
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./specs/001-hail-hero-hail/data:/app/specs/001-hail-hero-hail/data
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - hailhero-network
    profiles:
      - development

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  hailhero-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16